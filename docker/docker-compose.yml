version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: artsy_postgres
    environment:
      POSTGRES_DB: artsy_db
      POSTGRES_USER: bishal
      POSTGRES_PASSWORD: shrestha
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bishal -d artsy_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio
    container_name: minio
    environment:
      MINIO_ROOT_USER: bishal
      MINIO_ROOT_PASSWORD: shrestha
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"    # S3 API
      - "9001:9001"    # Web UI
    command: server /data --console-address ":9001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 10s
      timeout: 5s
      retries: 5

#  backend:
#    build: ./
#    container_name: artsy_backend
#    depends_on:
#      postgres:
#        condition: service_healthy
#      minio:
#        condition: service_healthy
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://artsy_postgres:5432/artsy_db
#      SPRING_DATASOURCE_USERNAME: bishal
#      SPRING_DATASOURCE_PASSWORD: shrestha
#      MINIO_URL: http://minio:9000
#      MINIO_ACCESS_KEY: bishal
#      MINIO_SECRET_KEY: shrestha
#    ports:
#      - "8080:8080"

  backend1:
    build: ../
    container_name: artsy_backend1
    ports:
      - "8081:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://artsy_postgres:5432/artsy_db
      SPRING_DATASOURCE_USERNAME: bishal
      SPRING_DATASOURCE_PASSWORD: shrestha
      SERVER_PORT: 8080
      MINIO_URL: http://minio:9000
      MINIO_ACCESS_KEY: bishal
      MINIO_SECRET_KEY: shrestha
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy

  backend2:
    build: ../
    container_name: artsy_backend2
    ports:
      - "8082:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://artsy_postgres:5432/artsy_db
      SPRING_DATASOURCE_USERNAME: bishal
      SPRING_DATASOURCE_PASSWORD: shrestha
      SERVER_PORT: 8080
      MINIO_URL: http://minio:9000
      MINIO_ACCESS_KEY: bishal
      MINIO_SECRET_KEY: shrestha
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy

  backend3:
    build: ../
    container_name: artsy_backend3
    ports:
      - "8083:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://artsy_postgres:5432/artsy_db
      SPRING_DATASOURCE_USERNAME: bishal
      SPRING_DATASOURCE_PASSWORD: shrestha
      SERVER_PORT: 8080
      MINIO_URL: http://minio:9000
      MINIO_ACCESS_KEY: bishal
      MINIO_SECRET_KEY: shrestha
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy


  nginx:
    image: nginx:alpine
    container_name: artsy_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend1
      - backend2
      - backend3

  minio_init:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      mc alias set local http://minio:9000 bishal shrestha;
      mc mb local/artsy-bucket;
      mc policy set public local/artsy-bucket;
      "

#  env_file: .env


volumes:
  pgdata:
  minio_data:


